# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET		/							controllers.Application.index()
GET		/concept					controllers.Application.concept()
GET		/read-only					controllers.Application.browser()
GET		/browser					controllers.Application.browser()
GET		/create						controllers.Application.create()

GET		/api/au-tree				controllers.TreeView.tree()

#Alternate
GET		/api/locations/:gid.:format		controllers.LocationServices.locations(gid:Long, format, maxExteriorRings:java.lang.Integer ?= null)

POST	/api/locations				controllers.LocationServices.create()
GET		/api/locations/:gid			controllers.LocationServices.locations(gid:Long, format?="GeoJSON", maxExteriorRings:java.lang.Integer?=null)
PUT		/api/locations/:gid			controllers.LocationServices.update(gid:Long)
DELETE	/api/locations/:gid			controllers.LocationServices.delete(gid:Long)
GET		/api/locations				controllers.LocationServices.findLocations(q, limit:Int?=10, offset:Int?=0)
GET		/api/locations-by-coordinate controllers.LocationServices.findLocationsByPoint(lat:Double, long:Double)
POST	/api/locations-by-geometry controllers.LocationServices.findByFeatureCollection(superTypeId:java.lang.Long ?= null, typeId:java.lang.Long ?= null)

GET		/api/super-types			controllers.ListServices.findSuperTypes()

GET		/api/unique-location-names	controllers.LocationServices.findLocationNames(q, limit:Int?=10)
GET		/api/geometry-metadata/:gid	controllers.LocationServices.getGeometryMetadata(gid:Long, tolerance:java.lang.Double?=null)

# Map static resources from the /public folder to the /assets URL path
GET		/assets/*file				controllers.Assets.at(path="/public", file)
